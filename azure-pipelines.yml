# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**\*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: false
    performMultiLevelLookup: true

- task: PowerShell@2
  displayName: Set the name of the Repository
  inputs:
    targetType: 'inline'
    script: |
      [string] $RepoName = "$(Build.Repository.Name)".Remove(0, "$(Build.Repository.Name)".IndexOf("/") + 1)
      Write-Host "Setting the name of the Repository to '$RepoName'."
      Write-Host "##vso[task.setvariable variable=RepoName]$RepoName"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

#win-x64
- task: DotNetCoreCLI@2
  displayName: Build win-x64
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.sln'
    arguments: '--configuration $(BuildConfiguration) -p:ZipOutputPath=$(Build.ArtifactStagingDirectory)'
    modifyOutputPath: false
    zipAfterPublish: false

#win-x64_Standalone
- task: DotNetCoreCLI@2
  displayName: Build win-x64_Standalone
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '-c $(BuildConfiguration) -r win-x64 -p:SelfContained=true -p:ZipOutputPath=$(Build.ArtifactStagingDirectory)'
    modifyOutputPath: false
    zipAfterPublish: false    

- task: gitversion/setup@0
  displayName: Setup GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Execute GitVersion

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_Veraatversus'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(GitVersion.SemVer)'
    title: '$(RepoName)-$(GitVersion.SemVer)'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    assets: '$(Build.ArtifactStagingDirectory)\*.zip'